import java.util.HashMap;
import java.util.Scanner;

public class Main {

    public static int lengthOfLongestSubstring(String s) {
        int n = s.length();
        int maxLength = 0;
        int start = 0;

        // Map to store the last index of each character in the string
        HashMap<Character, Integer> lastIndexMap = new HashMap<>();

        for (int end = 0; end < n; end++) {
            char currentChar = s.charAt(end);

            // If the character is already in the substring, update the start index
            if (lastIndexMap.containsKey(currentChar)) {
                start = Math.max(start, lastIndexMap.get(currentChar) + 1);
            }

            // Update the last index of the current character
            lastIndexMap.put(currentChar, end);

            // Update the maximum length of the substring
            maxLength = Math.max(maxLength, end - start + 1);
        }

        return maxLength;
    }

    public static void main(String[] args) {
        // Taking user input
        Scanner scanner = new Scanner(System.in);
        
        String inputString = scanner.nextLine();

        // Call the function with user input
        int result = lengthOfLongestSubstring(inputString);
        System.out.println(result);

        // Close the scanner
        scanner.close();
    }
}